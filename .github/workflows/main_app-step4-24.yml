name: Deploy FastAPI to Azure App Service

on:
  push:
    branches:
      - main # main ブランチへのプッシュ時に実行
  workflow_dispatch: # 手動実行を許可

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Copy application files
        # アプリケーションコードと依存関係を含むディレクトリを準備します。
        # この例では、requirements.txt と 'app' ディレクトリをパッケージ化すると仮定しています。
        # FastAPIアプリケーションが app/main.py にある場合など、必要に応じて調整してください。
        # 例えば、FastAPIアプリケーションのルートが 'app' ディレクトリの場合、
        # このステップは不要で、そのまま 'package: .' を使用できます。
        # しかし、明確に「デプロイするファイル群」を定義したい場合は有効です。
        run: |
          mkdir deploy_package
          cp -r app deploy_package/
          cp requirements.txt deploy_package/
          # その他の必要なファイル（例: .env.production, static files, templates など）
          # cp .env.production deploy_package/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: fastapi-app # Artifact の名前
          path: deploy_package/ # アップロードするディレクトリ

  deploy:
    runs-on: ubuntu-latest
    needs: build # このジョブは 'build' ジョブが成功した後にのみ実行されます
    environment: production # 環境を指定することもできます（オプション）

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: fastapi-app # 'build' ジョブでアップロードした Artifact の名前

      - name: List downloaded files (for debugging)
        run: ls -R

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: app-step4-24
          slot-name: production
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          # build ジョブで準備したパッケージのパスを指定します。
          # 今回は 'deploy_package/' の中身がカレントディレクトリにダウンロードされるため '.' でOKです。
          package: .
